/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.QuizerDao;
import Entity.Question;
import Entity.Quiz;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author Muhammad Umer
 */
public class TakingQuizView extends javax.swing.JFrame {
    Quiz thisquiz=new Quiz();
    List<Question> listOfQuestions=new ArrayList();
    Iterator itr;
    Question[] questionsArray;
    Question qs;
    int counter;
    //ButtonGroup radiogroup=new ButtonGroup();
    //ButtonGroup boolgroup=new ButtonGroup();
    int qatt;
    int marksobt;
    int markspq;
    /**
     * Creates new form TakingQuizView
     */
    public TakingQuizView(String quiztitle) {
        initComponents();
        MCQPanel.setVisible(false);
        TFPanel.setVisible(false);
        NumPanel.setVisible(false);
        QuizerDao qd=new QuizerDao();
        this.thisquiz=qd.getQuiz(quiztitle);
        System.out.printf("%s\n%s\n%d",thisquiz.getTitle(),thisquiz.getDescription(),thisquiz.getMarks());
        String mma=Integer.toString(thisquiz.getMarks());
        totalmarkslabel.setText("Total Marks: "+mma);
        this.listOfQuestions=thisquiz.getQuestions();
        counter=0;
        listtoArray();
        //this.itr=listOfQuestions.iterator();
        //Question qa=new Question();
        //qa=(Question)itr.next();
        //System.out.printf("%s\n%s\n%s",qa.type,qa.text,qa.expectedans);
        //radiogroup.add(option1radio);
        //radiogroup.add(option2radio);
        //radiogroup.add(option3radio);
        //radiogroup.add(option4radio);
        //boolgroup.add(trueradio);
        //boolgroup.add(falseradio);
        markspq=0;
        markspq=thisquiz.getMarks()/10;
        System.out.print("Marks per question: "+markspq);
        qatt=0;
        marksobt=0;
    }
    
    public TakingQuizView(){}
    public void listtoArray (){
        this.questionsArray = new Question[this.listOfQuestions.size()];
        questionsArray = this.listOfQuestions.toArray(questionsArray);
        System.out.printf("%s\n%s\n%s",questionsArray[0].type,questionsArray[0].text,questionsArray[0].expectedans);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        nextbutton = new javax.swing.JButton();
        totalmarkslabel = new javax.swing.JLabel();
        MCQPanel = new javax.swing.JPanel();
        questionlabelmcq = new javax.swing.JLabel();
        questiontextmcq = new javax.swing.JLabel();
        option1radio = new javax.swing.JRadioButton();
        option2radio = new javax.swing.JRadioButton();
        option3radio = new javax.swing.JRadioButton();
        option4radio = new javax.swing.JRadioButton();
        TFPanel = new javax.swing.JPanel();
        questionlabeltf = new javax.swing.JLabel();
        questiontexttf = new javax.swing.JLabel();
        trueradio = new javax.swing.JRadioButton();
        falseradio = new javax.swing.JRadioButton();
        NumPanel = new javax.swing.JPanel();
        questionlabelnum = new javax.swing.JLabel();
        questiontextnum = new javax.swing.JLabel();
        numansfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 600));
        setMinimumSize(new java.awt.Dimension(500, 600));
        setPreferredSize(new java.awt.Dimension(500, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nextbutton.setText("Next Question");
        nextbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(nextbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 11, -1, -1));

        totalmarkslabel.setText("Marks Label");
        getContentPane().add(totalmarkslabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 98, 23));

        MCQPanel.setMaximumSize(new java.awt.Dimension(67, 242));
        MCQPanel.setMinimumSize(new java.awt.Dimension(67, 242));

        questionlabelmcq.setText("Question:");

        questiontextmcq.setText("jLabel2");

        option4radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option4radioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MCQPanelLayout = new javax.swing.GroupLayout(MCQPanel);
        MCQPanel.setLayout(MCQPanelLayout);
        MCQPanelLayout.setHorizontalGroup(
            MCQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MCQPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MCQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questiontextmcq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MCQPanelLayout.createSequentialGroup()
                        .addGroup(MCQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option4radio)
                            .addComponent(option3radio)
                            .addComponent(option2radio)
                            .addComponent(questionlabelmcq)
                            .addComponent(option1radio))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MCQPanelLayout.setVerticalGroup(
            MCQPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MCQPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionlabelmcq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questiontextmcq, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option1radio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option2radio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option3radio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option4radio)
                .addGap(29, 29, 29))
        );

        getContentPane().add(MCQPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 46, 203, -1));

        TFPanel.setMaximumSize(new java.awt.Dimension(67, 242));
        TFPanel.setMinimumSize(new java.awt.Dimension(67, 242));
        TFPanel.setPreferredSize(new java.awt.Dimension(67, 242));

        questionlabeltf.setText("Question:");

        questiontexttf.setText("jLabel2");

        javax.swing.GroupLayout TFPanelLayout = new javax.swing.GroupLayout(TFPanel);
        TFPanel.setLayout(TFPanelLayout);
        TFPanelLayout.setHorizontalGroup(
            TFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TFPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questiontexttf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TFPanelLayout.createSequentialGroup()
                        .addGroup(TFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(falseradio)
                            .addComponent(questionlabeltf)
                            .addComponent(trueradio))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        TFPanelLayout.setVerticalGroup(
            TFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TFPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionlabeltf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questiontexttf, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(trueradio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(falseradio)
                .addGap(78, 78, 78))
        );

        getContentPane().add(TFPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 294, 203, -1));

        NumPanel.setMaximumSize(new java.awt.Dimension(67, 242));
        NumPanel.setMinimumSize(new java.awt.Dimension(67, 242));
        NumPanel.setPreferredSize(new java.awt.Dimension(67, 242));

        questionlabelnum.setText("Question:");

        questiontextnum.setText("jLabel2");

        jLabel5.setText("Answer:");

        javax.swing.GroupLayout NumPanelLayout = new javax.swing.GroupLayout(NumPanel);
        NumPanel.setLayout(NumPanelLayout);
        NumPanelLayout.setHorizontalGroup(
            NumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NumPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NumPanelLayout.createSequentialGroup()
                        .addGroup(NumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numansfield)
                            .addComponent(questiontextnum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NumPanelLayout.createSequentialGroup()
                                .addComponent(questionlabelnum)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))
                    .addGroup(NumPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        NumPanelLayout.setVerticalGroup(
            NumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NumPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionlabelnum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questiontextnum, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(5, 5, 5)
                .addComponent(numansfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        getContentPane().add(NumPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 542, 203, 250));

        setSize(new java.awt.Dimension(239, 842));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nextbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextbuttonActionPerformed
        // TODO add your handling code here:
        //qatt++;
        //questionsArray[counter]
        if(counter<listOfQuestions.size()){
            this.qs=(Question) questionsArray[counter];
            if("MCQ".equals(qs.type)){
                NumPanel.setVisible(false);
                TFPanel.setVisible(false);
                MCQPanel.setVisible(true);
                questionlabelmcq.setText("Question "+String.valueOf(counter+1)+":");
                questiontextmcq.setText(qs.text);
                option1radio.setText(qs.mcqarray[0]);
                option2radio.setText(qs.mcqarray[1]);
                option3radio.setText(qs.mcqarray[2]);
                option4radio.setText(qs.mcqarray[3]);
            }
            else if("True/False".equals(qs.type)){
                questionlabeltf.setText("Question "+String.valueOf(counter+1)+":");
                MCQPanel.setVisible(false);
                NumPanel.setVisible(false);
                TFPanel.setVisible(true);
                questiontexttf.setText(qs.text);
                trueradio.setText("True");
                falseradio.setText("False");
            }
            else if("Numeric".equals(qs.type)){
                questionlabelnum.setText("Question "+String.valueOf(counter+1)+":");
                MCQPanel.setVisible(false);
                TFPanel.setVisible(false);
                NumPanel.setVisible(true);
                questiontextnum.setText(qs.text);
            }
            if("MCQ".equals((String)questionsArray[counter].type))
        {
            System.out.print("\nI am MCQ counter: "+counter);
            JRadioButton rd=new JRadioButton();
            if((option1radio.isSelected())&&(!option2radio.isSelected())&&(!option3radio.isSelected())&&(!option4radio.isSelected())){
                System.out.print("\nOption 1 is selected");
                rd=option1radio;
            }
            else if((!option1radio.isSelected())&&(option2radio.isSelected())&&(!option3radio.isSelected())&&(!option4radio.isSelected())){
                System.out.print("\nOption 2 is selected");
                rd=option2radio;
            }
            else if((!option1radio.isSelected())&&(!option2radio.isSelected())&&(option3radio.isSelected())&&(!option4radio.isSelected())){
                System.out.print("\nOption 3 is selected");
                rd=option3radio;
            }
            else if((!option1radio.isSelected())&&(!option2radio.isSelected())&&(!option3radio.isSelected())&&(option4radio.isSelected())){
                System.out.print("\nOption 4 is selected");
                rd=option4radio;
            }
            //rd=(JRadioButton) radiogroup.getSelection();
            System.out.print((String)rd.getText());
            if(questionsArray[counter].expectedans.equals((String)rd.getText())){
                marksobt=marksobt+markspq;
                System.out.print("\nCurrent marks achieved:"+marksobt);
            }
            counter++;
        }
        else if("True/False".equals((String)questionsArray[counter].type)){
            System.out.print("\nI am TF counter: "+counter);
            JRadioButton rd=new JRadioButton();
            //rd=(JRadioButton) boolgroup.getSelection();
            if((trueradio.isSelected())&&(!falseradio.isSelected())){
                System.out.print("\nTrue is selected");
                rd=trueradio;
            }
            else if((falseradio.isSelected())&&(!trueradio.isSelected())){
                System.out.print("\nFalse is selected");
                rd=falseradio;
            }
            System.out.print(rd.getText());
            if(questionsArray[counter].expectedans.equals((String)rd.getText())){
                marksobt=marksobt+markspq;
                System.out.print("\nCurrent marks achieved:"+marksobt);
            }
            counter++;
        }
        else{
            System.out.print("\nI am Numeric counter: "+counter);
            Double ea=Double.parseDouble((String)questionsArray[counter].expectedans);
            Double ga=Double.parseDouble((String)numansfield.getText());
            System.out.print(numansfield.getText());
            if(ea.equals(ga)){
                marksobt=marksobt+markspq;
                System.out.print("\nCurrent marks achieved:"+marksobt);
            }
            counter++;
        }
        }
        else{
        if("MCQ".equals((String)questionsArray[counter-1].type))
        {
            System.out.print("\nI am MCQ counter: "+(counter-1));
            JRadioButton rd=new JRadioButton();
            if(option1radio.isSelected()){
                System.out.print("\nOption 1 is selected");
                rd=option1radio;
            }
            else if(option2radio.isSelected()){
                System.out.print("\nOption 2 is selected");
                rd=option2radio;
            }
            else if(option3radio.isSelected()){
                System.out.print("\nOption 3 is selected");
                rd=option3radio;
            }
            else if(option4radio.isSelected()){
                System.out.print("\nOption 4 is selected");
                rd=option4radio;
            }
            //rd=(JRadioButton) radiogroup.getSelection();
            System.out.print((String)rd.getText());
            if(questionsArray[counter-1].expectedans.equals((String)rd.getText())){
                marksobt=marksobt+markspq;
                System.out.print("\nCurrent marks achieved:"+marksobt);
            }
        }
        else if("True/False".equals((String)questionsArray[counter-1].type)){
            System.out.print("\nI am TF counter: "+(counter-1));
            JRadioButton rd=new JRadioButton();
            //rd=(JRadioButton) boolgroup.getSelection();
            if((trueradio.isSelected())&&(!falseradio.isSelected())){
                System.out.print("\nTrue is selected");
                rd=trueradio;
            }
            else if((falseradio.isSelected())&&(!trueradio.isSelected())){
                System.out.print("\nFalse is selected");
                rd=falseradio;
            }
            System.out.print(rd.getText());
            if(questionsArray[counter-1].expectedans.equals((String)rd.getText())){
                marksobt=marksobt+markspq;
                System.out.print("\nCurrent marks achieved:"+marksobt);
            }
        }
        else{
            System.out.print("\nI am Numeric counter: "+(counter-1));
            Double ea=Double.parseDouble((String)questionsArray[counter-1].expectedans);
            Double ga=Double.parseDouble((String)numansfield.getText());
            System.out.print("\n"+numansfield.getText());
            if(ea.equals(ga)){
                marksobt=marksobt+markspq;
                System.out.print("\nCurrent marks achieved:"+marksobt);
            }
        }
        nextbutton.setText("Done");
        JOptionPane.showMessageDialog(null,"You have obtained "+marksobt+" out of "+thisquiz.getMarks());
        TakingQuizView.this.dispose();
        StudentView sv=new StudentView();
        sv.setVisible(true);
        }
    }//GEN-LAST:event_nextbuttonActionPerformed

    private void option4radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option4radioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_option4radioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakingQuizView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakingQuizView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakingQuizView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakingQuizView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakingQuizView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MCQPanel;
    private javax.swing.JPanel NumPanel;
    private javax.swing.JPanel TFPanel;
    private javax.swing.JRadioButton falseradio;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton nextbutton;
    private javax.swing.JTextField numansfield;
    private javax.swing.JRadioButton option1radio;
    private javax.swing.JRadioButton option2radio;
    private javax.swing.JRadioButton option3radio;
    private javax.swing.JRadioButton option4radio;
    private javax.swing.JLabel questionlabelmcq;
    private javax.swing.JLabel questionlabelnum;
    private javax.swing.JLabel questionlabeltf;
    private javax.swing.JLabel questiontextmcq;
    private javax.swing.JLabel questiontextnum;
    private javax.swing.JLabel questiontexttf;
    private javax.swing.JLabel totalmarkslabel;
    private javax.swing.JRadioButton trueradio;
    // End of variables declaration//GEN-END:variables
}
